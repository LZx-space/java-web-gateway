plugins {
    id 'org.springframework.boot' version '2.6.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java-library'
    id 'java'
}

group = 'com.bcs.doap'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_1_8

bootJar {
    archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.1")
    set('nacosDiscoveryVersion', '2021.1')
    set('apolloClientVersion', '1.9.1')
    set('springfoxVersion', '3.0.0')
    set('jschVersion', '0.1.55')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
    implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.session:spring-session-data-redis'
    implementation "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery:${nacosDiscoveryVersion}"
    implementation "com.ctrip.framework.apollo:apollo-client:${apolloClientVersion}"
    implementation "io.springfox:springfox-boot-starter:${springfoxVersion}"
    implementation "com.jcraft:jsch:${jschVersion}"
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "org.springframework.session:spring-session-bom:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}



